name: Deploy automation

on:
  release:
    types: [published]
  workflow_run:
    workflows: ['Main automation']
    branches: [main]
    types:
      - completed

concurrency:
  group: deploy-automation

jobs:
  compute-build-info:
    if: ${{ github.event.workflow_run.conclusion == 'success' }} || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ steps.build-info.outputs.sha_short }}
      date: ${{ steps.build-info.outputs.date }}
      latest_tag: ${{ steps.build-info.outputs.latest_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Compute build info
        id: build-info
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "::set-output name=date::$(date +'%Y%m%d')"

          version=${GITHUB_REF#refs/*/}
          echo $version
          echo "::set-output name=latest_tag::$version"

  deploy-dev:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    needs: [compute-build-info]
    env:
      DEPLOY: ${{ secrets.DEV_DEPLOY }}
    steps:
      - name: Checkout code
        if: "${{ env.DEPLOY == 'true' }}"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Cloud SDK
        if: "${{ env.DEPLOY == 'true' }}"
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.DEV_GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.DEV_GCP_SA_KEY }}
          export_default_credentials: true
      - name: Get secrets
        if: "${{ env.DEPLOY == 'true' }}"
        id: secrets
        uses: google-github-actions/get-secretmanager-secrets@main
        with:
          secrets: |-
            PORT:${{ secrets.DEV_GCP_PROJECT_ID }}/PORT
            REACT_APP_BASE_LAYOUT_CONFIG_KEY:${{ secrets.DEV_GCP_PROJECT_ID }}/REACT_APP_BASE_LAYOUT_CONFIG_KEY
            REACT_APP_API_URL:${{ secrets.DEV_GCP_PROJECT_ID }}/REACT_APP_API_URL
            REACT_APP_WEB_URL:${{ secrets.DEV_GCP_PROJECT_ID }}/REACT_APP_WEB_URL
            REACT_APP_VERSION:${{ secrets.DEV_GCP_PROJECT_ID }}/REACT_APP_VERSION
            REACT_APP_THEME_NAME:${{ secrets.DEV_GCP_PROJECT_ID }}/REACT_APP_THEME_NAME
            REACT_APP_THEME_DEMO:${{ secrets.DEV_GCP_PROJECT_ID }}/REACT_APP_THEME_DEMO
            REACT_APP_BOOTSTRAP_DOCS_LINK:${{ secrets.DEV_GCP_PROJECT_ID }}/REACT_APP_BOOTSTRAP_DOCS_LINK
            REACT_APP_SASS_PATH:${{ secrets.DEV_GCP_PROJECT_ID }}/REACT_APP_SASS_PATH
            REACT_APP_SASS_VARIABLES_PATH:${{ secrets.DEV_GCP_PROJECT_ID }}/REACT_APP_SASS_VARIABLES_PATH
            REACT_APP_PURCHASE_URL:${{ secrets.DEV_GCP_PROJECT_ID }}/REACT_APP_PURCHASE_URL
            REACT_APP_PREVIEW_URL:${{ secrets.DEV_GCP_PROJECT_ID }}/REACT_APP_PREVIEW_URL
            REACT_APP_PREVIEW_REACT_URL:${{ secrets.DEV_GCP_PROJECT_ID }}/REACT_APP_PREVIEW_REACT_URL
            REACT_APP_PREVIEW_DOCS_URL:${{ secrets.DEV_GCP_PROJECT_ID }}/REACT_APP_PREVIEW_DOCS_URL
            DNS_CMS:${{ secrets.DEV_GCP_PROJECT_ID }}/DNS_CMS
            SSH_HOST:${{ secrets.DEV_GCP_PROJECT_ID }}/SSH_HOST
            SSH_USERNAME:${{ secrets.DEV_GCP_PROJECT_ID }}/SSH_USERNAME
            SSH_KEY:${{ secrets.DEV_GCP_PROJECT_ID }}/SSH_KEY
            SSH_PORT:${{ secrets.DEV_GCP_PROJECT_ID }}/SSH_PORT
      - name: Deploy
        if: "${{ env.DEPLOY == 'true' }}"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.secrets.outputs.SSH_HOST }}
          username: ${{ steps.secrets.outputs.SSH_USERNAME }}
          key: ${{ steps.secrets.outputs.SSH_KEY }}
          port: ${{ steps.secrets.outputs.SSH_PORT }}
          script: |
            helm repo add myriadsocial https://charts.myriad.social
            helm repo update
            helm upgrade myriad-cms myriadsocial/myriad-cms \
              --install \
              --set-string image.tag=${{ needs.compute-build-info.outputs.sha_short }}-${{ needs.compute-build-info.outputs.date }} \
              --set-string config.port=${{ steps.secrets.outputs.PORT }} \
              --set-string config.appBaseLayoutConfigKey=${{ steps.secrets.outputs.REACT_APP_BASE_LAYOUT_CONFIG_KEY }} \
              --set-string config.appApiUrl=${{ steps.secrets.outputs.REACT_APP_API_URL }} \
              --set-string config.appWebUrl=${{ steps.secrets.outputs.REACT_APP_WEB_URL }} \
              --set-string config.appVersion=${{ steps.secrets.outputs.REACT_APP_VERSION }} \
              --set-string config.appThemeName=${{ steps.secrets.outputs.REACT_APP_THEME_NAME }} \
              --set-string config.appThemeDemo=${{ steps.secrets.outputs.REACT_APP_THEME_DEMO }} \
              --set-string config.appBootstrapDocsLink=${{ steps.secrets.outputs.REACT_APP_BOOTSTRAP_DOCS_LINK }} \
              --set-string config.appSassPath=${{ steps.secrets.outputs.REACT_APP_SASS_PATH }} \
              --set-string config.appSassVariablePath=${{ steps.secrets.outputs.REACT_APP_SASS_VARIABLES_PATH }} \
              --set-string config.appPurchaseUrl=${{ steps.secrets.outputs.REACT_APP_PURCHASE_URL }} \
              --set-string config.appPreviewUrl=${{ steps.secrets.outputs.REACT_APP_PREVIEW_URL }} \
              --set-string config.appPreviewReactUrl=${{ steps.secrets.outputs.REACT_APP_PREVIEW_REACT_URL }}\
              --set-string config.appPreviewDocsUrl=${{ steps.secrets.outputs.REACT_APP_PREVIEW_DOCS_URL }} \
              --set ingress.enabled=true \
              --set-string ingress.annotations."kubernetes\.io/ingress\.class"=nginx \
              --set-string ingress.annotations."cert-manager\.io/cluster-issuer"=letsencrypt \
              --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/proxy-body-size"="100m" \
              --set-string ingress.annotations."nginx\.org/client-max-body-size"="100m" \
              --set-string ingress.hosts[0].host=${{ steps.secrets.outputs.DNS_CMS }} \
              --set-string ingress.hosts[0].paths[0].path=/ \
              --set-string ingress.hosts[0].paths[0].pathType=ImplementationSpecific \
              --set-string ingress.tls[0].secretName=myriad-cms-tls \
              --set-string ingress.tls[0].hosts[0]=${{ steps.secrets.outputs.DNS_CMS }} \
              --set-string resources.requests.cpu=300m \
              --set-string resources.requests.memory=512Mi \
              --set-string resources.limits.cpu=500m \
              --set-string resources.limits.memory=1024Mi \
              --set replicaCount=3 \
              --set autoscaling.enabled=true \
              --set autoscaling.minReplicas=3 \
              --set autoscaling.maxReplicas=100
            kubectl rollout status deployment/myriad-cms

  deploy-alpha-release:
    if: "github.event.release.prerelease && contains(needs.compute-build-info.outputs.latest_tag, 'alpha')"
    runs-on: ubuntu-latest
    needs: [compute-build-info]
    env:
      DEPLOY: ${{ secrets.STG_DEPLOY }}
    steps:
      - name: Checkout code
        if: "${{ env.DEPLOY == 'true' }}"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Cloud SDK
        if: "${{ env.DEPLOY == 'true' }}"
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.STG_GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.STG_GCP_SA_KEY }}
          export_default_credentials: true
      - name: Get secrets
        if: "${{ env.DEPLOY == 'true' }}"
        id: secrets
        uses: google-github-actions/get-secretmanager-secrets@main
        with:
          secrets: |-
            PORT:${{ secrets.STG_GCP_PROJECT_ID }}/PORT
            REACT_APP_BASE_LAYOUT_CONFIG_KEY:${{ secrets.STG_GCP_PROJECT_ID }}/REACT_APP_BASE_LAYOUT_CONFIG_KEY
            REACT_APP_API_URL:${{ secrets.STG_GCP_PROJECT_ID }}/REACT_APP_API_URL
            REACT_APP_WEB_URL:${{ secrets.STG_GCP_PROJECT_ID }}/REACT_APP_WEB_URL
            REACT_APP_VERSION:${{ secrets.STG_GCP_PROJECT_ID }}/REACT_APP_VERSION
            REACT_APP_THEME_NAME:${{ secrets.STG_GCP_PROJECT_ID }}/REACT_APP_THEME_NAME
            REACT_APP_THEME_DEMO:${{ secrets.STG_GCP_PROJECT_ID }}/REACT_APP_THEME_DEMO
            REACT_APP_BOOTSTRAP_DOCS_LINK:${{ secrets.STG_GCP_PROJECT_ID }}/REACT_APP_BOOTSTRAP_DOCS_LINK
            REACT_APP_SASS_PATH:${{ secrets.STG_GCP_PROJECT_ID }}/REACT_APP_SASS_PATH
            REACT_APP_SASS_VARIABLES_PATH:${{ secrets.STG_GCP_PROJECT_ID }}/REACT_APP_SASS_VARIABLES_PATH
            REACT_APP_PURCHASE_URL:${{ secrets.STG_GCP_PROJECT_ID }}/REACT_APP_PURCHASE_URL
            REACT_APP_PREVIEW_URL:${{ secrets.STG_GCP_PROJECT_ID }}/REACT_APP_PREVIEW_URL
            REACT_APP_PREVIEW_REACT_URL:${{ secrets.STG_GCP_PROJECT_ID }}/REACT_APP_PREVIEW_REACT_URL
            REACT_APP_PREVIEW_DOCS_URL:${{ secrets.STG_GCP_PROJECT_ID }}/REACT_APP_PREVIEW_DOCS_URL
            DNS_CMS:${{ secrets.STG_GCP_PROJECT_ID }}/DNS_CMS
            SSH_HOST:${{ secrets.STG_GCP_PROJECT_ID }}/SSH_HOST
            SSH_USERNAME:${{ secrets.STG_GCP_PROJECT_ID }}/SSH_USERNAME
            SSH_KEY:${{ secrets.STG_GCP_PROJECT_ID }}/SSH_KEY
            SSH_PORT:${{ secrets.STG_GCP_PROJECT_ID }}/SSH_PORT
      - name: Deploy
        if: "${{ env.DEPLOY == 'true' }}"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.secrets.outputs.SSH_HOST }}
          username: ${{ steps.secrets.outputs.SSH_USERNAME }}
          key: ${{ steps.secrets.outputs.SSH_KEY }}
          port: ${{ steps.secrets.outputs.SSH_PORT }}
          script: |
            helm repo add myriadsocial https://charts.myriad.social
            helm repo update
            helm upgrade myriad-cms myriadsocial/myriad-cms \
              --install \
              --set-string image.tag=${{ needs.compute-build-info.outputs.latest_tag }} \
              --set-string image.pullPolicy=Always \
              --set-string config.appName="Myriad Staging" \
              --set-string config.nextAuthURL=https://app.stg.myriad.systems \
              --set-string config.port=${{ steps.secrets.outputs.PORT }} \
              --set-string config.appBaseLayoutConfigKey=${{ steps.secrets.outputs.REACT_APP_BASE_LAYOUT_CONFIG_KEY }} \
              --set-string config.appApiUrl=${{ steps.secrets.outputs.REACT_APP_API_URL }} \
              --set-string config.appWebUrl=${{ steps.secrets.outputs.REACT_APP_WEB_URL }} \
              --set-string config.appVersion=${{ steps.secrets.outputs.REACT_APP_VERSION }} \
              --set-string config.appThemeName=${{ steps.secrets.outputs.REACT_APP_THEME_NAME }} \
              --set-string config.appThemeDemo=${{ steps.secrets.outputs.REACT_APP_THEME_DEMO }} \
              --set-string config.appBootstrapDocsLink=${{ steps.secrets.outputs.REACT_APP_BOOTSTRAP_DOCS_LINK }} \
              --set-string config.appSassPath=${{ steps.secrets.outputs.REACT_APP_SASS_PATH }} \
              --set-string config.appSassVariablePath=${{ steps.secrets.outputs.REACT_APP_SASS_VARIABLES_PATH }} \
              --set-string config.appPurchaseUrl=${{ steps.secrets.outputs.REACT_APP_PURCHASE_URL }} \
              --set-string config.appPreviewUrl=${{ steps.secrets.outputs.REACT_APP_PREVIEW_URL }} \
              --set-string config.appPreviewReactUrl=${{ steps.secrets.outputs.REACT_APP_PREVIEW_REACT_URL }}\
              --set-string config.appPreviewDocsUrl=${{ steps.secrets.outputs.REACT_APP_PREVIEW_DOCS_URL }} \
              --set ingress.enabled=true \
              --set-string ingress.annotations."kubernetes\.io/ingress\.class"=nginx \
              --set-string ingress.annotations."cert-manager\.io/cluster-issuer"=letsencrypt \
              --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/proxy-body-size"="100m" \
              --set-string ingress.annotations."nginx\.org/client-max-body-size"="100m" \
              --set-string ingress.hosts[0].host=${{ steps.secrets.outputs.DNS_CMS }} \
              --set-string ingress.hosts[0].paths[0].path=/ \
              --set-string ingress.hosts[0].paths[0].pathType=ImplementationSpecific \
              --set-string ingress.tls[0].secretName=myriad-cms-tls \
              --set-string ingress.tls[0].hosts[0]=${{ steps.secrets.outputs.DNS_CMS }} \
              --set-string resources.requests.cpu=300m \
              --set-string resources.requests.memory=512Mi \
              --set-string resources.limits.cpu=500m \
              --set-string resources.limits.memory=1024Mi \
              --set replicaCount=3 \
              --set autoscaling.enabled=true \
              --set autoscaling.minReplicas=3 \
              --set autoscaling.maxReplicas=100
            kubectl rollout status deployment/myriad-cms

  deploy-beta-release:
    if: "github.event.release.prerelease && contains(needs.compute-build-info.outputs.latest_tag, 'beta')"
    runs-on: ubuntu-latest
    needs: [compute-build-info]
    env:
      DEPLOY: ${{ secrets.TESTNET_DEPLOY }}
    steps:
      - name: Checkout code
        if: "${{ env.DEPLOY == 'true' }}"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Cloud SDK
        if: "${{ env.DEPLOY == 'true' }}"
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.TESTNET_GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.TESTNET_GCP_SA_KEY }}
          export_default_credentials: true
      - name: Get secrets
        if: "${{ env.DEPLOY == 'true' }}"
        id: secrets
        uses: google-github-actions/get-secretmanager-secrets@main
        with:
          secrets: |-
            PORT:${{ secrets.TESTNET_GCP_PROJECT_ID }}/PORT
            REACT_APP_BASE_LAYOUT_CONFIG_KEY:${{ secrets.TESTNET_GCP_PROJECT_ID }}/REACT_APP_BASE_LAYOUT_CONFIG_KEY
            REACT_APP_API_URL:${{ secrets.TESTNET_GCP_PROJECT_ID }}/REACT_APP_API_URL
            REACT_APP_WEB_URL:${{ secrets.TESTNET_GCP_PROJECT_ID }}/REACT_APP_WEB_URL
            REACT_APP_VERSION:${{ secrets.TESTNET_GCP_PROJECT_ID }}/REACT_APP_VERSION
            REACT_APP_THEME_NAME:${{ secrets.TESTNET_GCP_PROJECT_ID }}/REACT_APP_THEME_NAME
            REACT_APP_THEME_DEMO:${{ secrets.TESTNET_GCP_PROJECT_ID }}/REACT_APP_THEME_DEMO
            REACT_APP_BOOTSTRAP_DOCS_LINK:${{ secrets.TESTNET_GCP_PROJECT_ID }}/REACT_APP_BOOTSTRAP_DOCS_LINK
            REACT_APP_SASS_PATH:${{ secrets.TESTNET_GCP_PROJECT_ID }}/REACT_APP_SASS_PATH
            REACT_APP_SASS_VARIABLES_PATH:${{ secrets.TESTNET_GCP_PROJECT_ID }}/REACT_APP_SASS_VARIABLES_PATH
            REACT_APP_PURCHASE_URL:${{ secrets.TESTNET_GCP_PROJECT_ID }}/REACT_APP_PURCHASE_URL
            REACT_APP_PREVIEW_URL:${{ secrets.TESTNET_GCP_PROJECT_ID }}/REACT_APP_PREVIEW_URL
            REACT_APP_PREVIEW_REACT_URL:${{ secrets.TESTNET_GCP_PROJECT_ID }}/REACT_APP_PREVIEW_REACT_URL
            REACT_APP_PREVIEW_DOCS_URL:${{ secrets.TESTNET_GCP_PROJECT_ID }}/REACT_APP_PREVIEW_DOCS_URL
            DNS_CMS:${{ secrets.TESTNET_GCP_PROJECT_ID }}/DNS_CMS
            SSH_HOST:${{ secrets.TESTNET_GCP_PROJECT_ID }}/SSH_HOST
            SSH_USERNAME:${{ secrets.TESTNET_GCP_PROJECT_ID }}/SSH_USERNAME
            SSH_KEY:${{ secrets.TESTNET_GCP_PROJECT_ID }}/SSH_KEY
            SSH_PORT:${{ secrets.TESTNET_GCP_PROJECT_ID }}/SSH_PORT
      - name: Deploy
        if: "${{ env.DEPLOY == 'true' }}"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.secrets.outputs.SSH_HOST }}
          username: ${{ steps.secrets.outputs.SSH_USERNAME }}
          key: ${{ steps.secrets.outputs.SSH_KEY }}
          port: ${{ steps.secrets.outputs.SSH_PORT }}
          script: |
            helm repo add myriadsocial https://charts.myriad.social
            helm repo update
            helm upgrade myriad-cms myriadsocial/myriad-cms \
              --install \
              --set-string image.tag=${{ needs.compute-build-info.outputs.latest_tag }} \
              --set-string config.port=${{ steps.secrets.outputs.PORT }} \
              --set-string config.appBaseLayoutConfigKey=${{ steps.secrets.outputs.REACT_APP_BASE_LAYOUT_CONFIG_KEY }} \
              --set-string config.appApiUrl=${{ steps.secrets.outputs.REACT_APP_API_URL }} \
              --set-string config.appWebUrl=${{ steps.secrets.outputs.REACT_APP_WEB_URL }} \
              --set-string config.appVersion=${{ steps.secrets.outputs.REACT_APP_VERSION }} \
              --set-string config.appThemeName=${{ steps.secrets.outputs.REACT_APP_THEME_NAME }} \
              --set-string config.appThemeDemo=${{ steps.secrets.outputs.REACT_APP_THEME_DEMO }} \
              --set-string config.appBootstrapDocsLink=${{ steps.secrets.outputs.REACT_APP_BOOTSTRAP_DOCS_LINK }} \
              --set-string config.appSassPath=${{ steps.secrets.outputs.REACT_APP_SASS_PATH }} \
              --set-string config.appSassVariablePath=${{ steps.secrets.outputs.REACT_APP_SASS_VARIABLES_PATH }} \
              --set-string config.appPurchaseUrl=${{ steps.secrets.outputs.REACT_APP_PURCHASE_URL }} \
              --set-string config.appPreviewUrl=${{ steps.secrets.outputs.REACT_APP_PREVIEW_URL }} \
              --set-string config.appPreviewReactUrl=${{ steps.secrets.outputs.REACT_APP_PREVIEW_REACT_URL }}\
              --set-string config.appPreviewDocsUrl=${{ steps.secrets.outputs.REACT_APP_PREVIEW_DOCS_URL }} \
              --set ingress.enabled=true \
              --set-string ingress.annotations."kubernetes\.io/ingress\.class"=nginx \
              --set-string ingress.annotations."cert-manager\.io/cluster-issuer"=letsencrypt \
              --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/proxy-body-size"="100m" \
              --set-string ingress.annotations."nginx\.org/client-max-body-size"="100m" \
              --set-string ingress.hosts[0].host=${{ steps.secrets.outputs.DNS_CMS }} \
              --set-string ingress.hosts[0].paths[0].path=/ \
              --set-string ingress.hosts[0].paths[0].pathType=ImplementationSpecific \
              --set-string ingress.tls[0].secretName=myriad-cms-tls \
              --set-string ingress.tls[0].hosts[0]=${{ steps.secrets.outputs.DNS_CMS }} \
              --set-string resources.requests.cpu=300m \
              --set-string resources.requests.memory=512Mi \
              --set-string resources.limits.cpu=500m \
              --set-string resources.limits.memory=1024Mi \
              --set replicaCount=3 \
              --set autoscaling.enabled=true \
              --set autoscaling.minReplicas=3 \
              --set autoscaling.maxReplicas=100
            kubectl rollout status deployment/myriad-cms

  deploy-pre-release:
    if: "github.event.release.prerelease && contains(needs.compute-build-info.outputs.latest_tag, 'rc')"
    runs-on: ubuntu-latest
    needs: [compute-build-info]
    env:
      DEPLOY: ${{ secrets.MAINNET_DEPLOY }}
    steps:
      - name: Checkout code
        if: "${{ env.DEPLOY == 'true' }}"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Cloud SDK
        if: "${{ env.DEPLOY == 'true' }}"
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.MAINNET_GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.MAINNET_GCP_SA_KEY }}
          export_default_credentials: true
      - name: Get secrets
        if: "${{ env.DEPLOY == 'true' }}"
        id: secrets
        uses: google-github-actions/get-secretmanager-secrets@main
        with:
          secrets: |-
            PORT:${{ secrets.MAINNET_GCP_PROJECT_ID }}/PORT
            REACT_APP_BASE_LAYOUT_CONFIG_KEY:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_BASE_LAYOUT_CONFIG_KEY
            REACT_APP_API_URL:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_API_URL
            REACT_APP_WEB_URL:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_WEB_URL
            REACT_APP_VERSION:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_VERSION
            REACT_APP_THEME_NAME:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_THEME_NAME
            REACT_APP_THEME_DEMO:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_THEME_DEMO
            REACT_APP_BOOTSTRAP_DOCS_LINK:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_BOOTSTRAP_DOCS_LINK
            REACT_APP_SASS_PATH:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_SASS_PATH
            REACT_APP_SASS_VARIABLES_PATH:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_SASS_VARIABLES_PATH
            REACT_APP_PURCHASE_URL:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_PURCHASE_URL
            REACT_APP_PREVIEW_URL:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_PREVIEW_URL
            REACT_APP_PREVIEW_REACT_URL:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_PREVIEW_REACT_URL
            REACT_APP_PREVIEW_DOCS_URL:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_PREVIEW_DOCS_URL
            DNS_CMS:${{ secrets.MAINNET_GCP_PROJECT_ID }}/DNS_CMS
            SSH_HOST:${{ secrets.MAINNET_GCP_PROJECT_ID }}/SSH_HOST
            SSH_USERNAME:${{ secrets.MAINNET_GCP_PROJECT_ID }}/SSH_USERNAME
            SSH_KEY:${{ secrets.MAINNET_GCP_PROJECT_ID }}/SSH_KEY
            SSH_PORT:${{ secrets.MAINNET_GCP_PROJECT_ID }}/SSH_PORT
      - name: Deploy
        if: "${{ env.DEPLOY == 'true' }}"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.secrets.outputs.SSH_HOST }}
          username: ${{ steps.secrets.outputs.SSH_USERNAME }}
          key: ${{ steps.secrets.outputs.SSH_KEY }}
          port: ${{ steps.secrets.outputs.SSH_PORT }}
          script: |
            helm repo add myriadsocial https://charts.myriad.social
            helm repo update
            helm upgrade myriad-cms myriadsocial/myriad-cms \
              --install \
              --set-string image.tag=${{ needs.compute-build-info.outputs.latest_tag }} \
              --set-string config.port=${{ steps.secrets.outputs.PORT }} \
              --set-string config.appBaseLayoutConfigKey=${{ steps.secrets.outputs.REACT_APP_BASE_LAYOUT_CONFIG_KEY }} \
              --set-string config.appApiUrl=${{ steps.secrets.outputs.REACT_APP_API_URL }} \
              --set-string config.appWebUrl=${{ steps.secrets.outputs.REACT_APP_WEB_URL }} \
              --set-string config.appVersion=${{ steps.secrets.outputs.REACT_APP_VERSION }} \
              --set-string config.appThemeName=${{ steps.secrets.outputs.REACT_APP_THEME_NAME }} \
              --set-string config.appThemeDemo=${{ steps.secrets.outputs.REACT_APP_THEME_DEMO }} \
              --set-string config.appBootstrapDocsLink=${{ steps.secrets.outputs.REACT_APP_BOOTSTRAP_DOCS_LINK }} \
              --set-string config.appSassPath=${{ steps.secrets.outputs.REACT_APP_SASS_PATH }} \
              --set-string config.appSassVariablePath=${{ steps.secrets.outputs.REACT_APP_SASS_VARIABLES_PATH }} \
              --set-string config.appPurchaseUrl=${{ steps.secrets.outputs.REACT_APP_PURCHASE_URL }} \
              --set-string config.appPreviewUrl=${{ steps.secrets.outputs.REACT_APP_PREVIEW_URL }} \
              --set-string config.appPreviewReactUrl=${{ steps.secrets.outputs.REACT_APP_PREVIEW_REACT_URL }}\
              --set-string config.appPreviewDocsUrl=${{ steps.secrets.outputs.REACT_APP_PREVIEW_DOCS_URL }} \
              --set ingress.enabled=true \
              --set-string ingress.annotations."kubernetes\.io/ingress\.class"=nginx \
              --set-string ingress.annotations."cert-manager\.io/cluster-issuer"=letsencrypt \
              --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/proxy-body-size"="100m" \
              --set-string ingress.annotations."nginx\.org/client-max-body-size"="100m" \
              --set-string ingress.hosts[0].host=${{ steps.secrets.outputs.DNS_CMS }} \
              --set-string ingress.hosts[0].paths[0].path=/ \
              --set-string ingress.hosts[0].paths[0].pathType=ImplementationSpecific \
              --set-string ingress.tls[0].secretName=myriad-cms-tls \
              --set-string ingress.tls[0].hosts[0]=${{ steps.secrets.outputs.DNS_CMS }} \
              --set-string resources.requests.cpu=300m \
              --set-string resources.requests.memory=512Mi \
              --set-string resources.limits.cpu=500m \
              --set-string resources.limits.memory=1024Mi \
              --set replicaCount=3 \
              --set autoscaling.enabled=true \
              --set autoscaling.minReplicas=3 \
              --set autoscaling.maxReplicas=100
            kubectl rollout status deployment/myriad-cms

  deploy-release:
    if: "startsWith(github.ref, 'refs/tags/') && !github.event.release.prerelease"
    runs-on: ubuntu-latest
    needs: [compute-build-info]
    env:
      DEPLOY: ${{ secrets.MAINNET_DEPLOY }}
    steps:
      - name: Checkout code
        if: "${{ env.DEPLOY == 'true' }}"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Cloud SDK
        if: "${{ env.DEPLOY == 'true' }}"
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.MAINNET_GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.MAINNET_GCP_SA_KEY }}
          export_default_credentials: true
      - name: Get secrets
        if: "${{ env.DEPLOY == 'true' }}"
        id: secrets
        uses: google-github-actions/get-secretmanager-secrets@main
        with:
          secrets: |-
            PORT:${{ secrets.MAINNET_GCP_PROJECT_ID }}/PORT
            REACT_APP_BASE_LAYOUT_CONFIG_KEY:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_BASE_LAYOUT_CONFIG_KEY
            REACT_APP_API_URL:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_API_URL
            REACT_APP_WEB_URL:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_WEB_URL
            REACT_APP_VERSION:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_VERSION
            REACT_APP_THEME_NAME:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_THEME_NAME
            REACT_APP_THEME_DEMO:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_THEME_DEMO
            REACT_APP_BOOTSTRAP_DOCS_LINK:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_BOOTSTRAP_DOCS_LINK
            REACT_APP_SASS_PATH:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_SASS_PATH
            REACT_APP_SASS_VARIABLES_PATH:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_SASS_VARIABLES_PATH
            REACT_APP_PURCHASE_URL:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_PURCHASE_URL
            REACT_APP_PREVIEW_URL:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_PREVIEW_URL
            REACT_APP_PREVIEW_REACT_URL:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_PREVIEW_REACT_URL
            REACT_APP_PREVIEW_DOCS_URL:${{ secrets.MAINNET_GCP_PROJECT_ID }}/REACT_APP_PREVIEW_DOCS_URL
            DNS_CMS:${{ secrets.MAINNET_GCP_PROJECT_ID }}/DNS_CMS
            SSH_HOST:${{ secrets.MAINNET_GCP_PROJECT_ID }}/SSH_HOST
            SSH_USERNAME:${{ secrets.MAINNET_GCP_PROJECT_ID }}/SSH_USERNAME
            SSH_KEY:${{ secrets.MAINNET_GCP_PROJECT_ID }}/SSH_KEY
            SSH_PORT:${{ secrets.MAINNET_GCP_PROJECT_ID }}/SSH_PORT
      - name: Deploy
        if: "${{ env.DEPLOY == 'true' }}"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.secrets.outputs.SSH_HOST }}
          username: ${{ steps.secrets.outputs.SSH_USERNAME }}
          key: ${{ steps.secrets.outputs.SSH_KEY }}
          port: ${{ steps.secrets.outputs.SSH_PORT }}
          script: |
            helm repo add myriadsocial https://charts.myriad.social
            helm repo update
            helm upgrade myriad-cms myriadsocial/myriad-cms \
              --install \
              --set-string image.tag=${{ needs.compute-build-info.outputs.latest_tag }} \
              --set-string config.port=${{ steps.secrets.outputs.PORT }} \
              --set-string config.appBaseLayoutConfigKey=${{ steps.secrets.outputs.REACT_APP_BASE_LAYOUT_CONFIG_KEY }} \
              --set-string config.appApiUrl=${{ steps.secrets.outputs.REACT_APP_API_URL }} \
              --set-string config.appWebUrl=${{ steps.secrets.outputs.REACT_APP_WEB_URL }} \
              --set-string config.appVersion=${{ steps.secrets.outputs.REACT_APP_VERSION }} \
              --set-string config.appThemeName=${{ steps.secrets.outputs.REACT_APP_THEME_NAME }} \
              --set-string config.appThemeDemo=${{ steps.secrets.outputs.REACT_APP_THEME_DEMO }} \
              --set-string config.appBootstrapDocsLink=${{ steps.secrets.outputs.REACT_APP_BOOTSTRAP_DOCS_LINK }} \
              --set-string config.appSassPath=${{ steps.secrets.outputs.REACT_APP_SASS_PATH }} \
              --set-string config.appSassVariablePath=${{ steps.secrets.outputs.REACT_APP_SASS_VARIABLES_PATH }} \
              --set-string config.appPurchaseUrl=${{ steps.secrets.outputs.REACT_APP_PURCHASE_URL }} \
              --set-string config.appPreviewUrl=${{ steps.secrets.outputs.REACT_APP_PREVIEW_URL }} \
              --set-string config.appPreviewReactUrl=${{ steps.secrets.outputs.REACT_APP_PREVIEW_REACT_URL }}\
              --set-string config.appPreviewDocsUrl=${{ steps.secrets.outputs.REACT_APP_PREVIEW_DOCS_URL }} \
              --set ingress.enabled=true \
              --set-string ingress.annotations."kubernetes\.io/ingress\.class"=nginx \
              --set-string ingress.annotations."cert-manager\.io/cluster-issuer"=letsencrypt \
              --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/proxy-body-size"="100m" \
              --set-string ingress.annotations."nginx\.org/client-max-body-size"="100m" \
              --set-string ingress.hosts[0].host=${{ steps.secrets.outputs.DNS_CMS }} \
              --set-string ingress.hosts[0].paths[0].path=/ \
              --set-string ingress.hosts[0].paths[0].pathType=ImplementationSpecific \
              --set-string ingress.tls[0].secretName=myriad-cms-tls \
              --set-string ingress.tls[0].hosts[0]=${{ steps.secrets.outputs.DNS_CMS }} \
              --set-string resources.requests.cpu=300m \
              --set-string resources.requests.memory=512Mi \
              --set-string resources.limits.cpu=500m \
              --set-string resources.limits.memory=1024Mi \
              --set replicaCount=3 \
              --set autoscaling.enabled=true \
              --set autoscaling.minReplicas=3 \
              --set autoscaling.maxReplicas=100
            kubectl rollout status deployment/myriad-cms
